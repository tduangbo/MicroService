// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: eventcatalog.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GloboTicket.Grpc {
  public static partial class Events
  {
    static readonly string __ServiceName = "API.Events";

    static readonly grpc::Marshaller<global::GloboTicket.Grpc.GetAllEventsRequest> __Marshaller_API_GetAllEventsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GloboTicket.Grpc.GetAllEventsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GloboTicket.Grpc.GetAllEventsResponse> __Marshaller_API_GetAllEventsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GloboTicket.Grpc.GetAllEventsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GloboTicket.Grpc.GetAllEventsByCategoryIdRequest> __Marshaller_API_GetAllEventsByCategoryIdRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GloboTicket.Grpc.GetAllEventsByCategoryIdRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GloboTicket.Grpc.GetByEventIdRequest> __Marshaller_API_GetByEventIdRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GloboTicket.Grpc.GetByEventIdRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GloboTicket.Grpc.GetByEventIdResponse> __Marshaller_API_GetByEventIdResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GloboTicket.Grpc.GetByEventIdResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GloboTicket.Grpc.GetAllCategoriesRequest> __Marshaller_API_GetAllCategoriesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GloboTicket.Grpc.GetAllCategoriesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GloboTicket.Grpc.GetAllCategoriesResponse> __Marshaller_API_GetAllCategoriesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GloboTicket.Grpc.GetAllCategoriesResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::GloboTicket.Grpc.GetAllEventsRequest, global::GloboTicket.Grpc.GetAllEventsResponse> __Method_GetAll = new grpc::Method<global::GloboTicket.Grpc.GetAllEventsRequest, global::GloboTicket.Grpc.GetAllEventsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAll",
        __Marshaller_API_GetAllEventsRequest,
        __Marshaller_API_GetAllEventsResponse);

    static readonly grpc::Method<global::GloboTicket.Grpc.GetAllEventsByCategoryIdRequest, global::GloboTicket.Grpc.GetAllEventsResponse> __Method_GetAllByCategoryId = new grpc::Method<global::GloboTicket.Grpc.GetAllEventsByCategoryIdRequest, global::GloboTicket.Grpc.GetAllEventsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllByCategoryId",
        __Marshaller_API_GetAllEventsByCategoryIdRequest,
        __Marshaller_API_GetAllEventsResponse);

    static readonly grpc::Method<global::GloboTicket.Grpc.GetByEventIdRequest, global::GloboTicket.Grpc.GetByEventIdResponse> __Method_GetByEventId = new grpc::Method<global::GloboTicket.Grpc.GetByEventIdRequest, global::GloboTicket.Grpc.GetByEventIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByEventId",
        __Marshaller_API_GetByEventIdRequest,
        __Marshaller_API_GetByEventIdResponse);

    static readonly grpc::Method<global::GloboTicket.Grpc.GetAllCategoriesRequest, global::GloboTicket.Grpc.GetAllCategoriesResponse> __Method_GetAllCategories = new grpc::Method<global::GloboTicket.Grpc.GetAllCategoriesRequest, global::GloboTicket.Grpc.GetAllCategoriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllCategories",
        __Marshaller_API_GetAllCategoriesRequest,
        __Marshaller_API_GetAllCategoriesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GloboTicket.Grpc.EventcatalogReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Events</summary>
    public partial class EventsClient : grpc::ClientBase<EventsClient>
    {
      /// <summary>Creates a new client for Events</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public EventsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Events that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public EventsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected EventsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected EventsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GloboTicket.Grpc.GetAllEventsResponse GetAll(global::GloboTicket.Grpc.GetAllEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GloboTicket.Grpc.GetAllEventsResponse GetAll(global::GloboTicket.Grpc.GetAllEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GloboTicket.Grpc.GetAllEventsResponse> GetAllAsync(global::GloboTicket.Grpc.GetAllEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GloboTicket.Grpc.GetAllEventsResponse> GetAllAsync(global::GloboTicket.Grpc.GetAllEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual global::GloboTicket.Grpc.GetAllEventsResponse GetAllByCategoryId(global::GloboTicket.Grpc.GetAllEventsByCategoryIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllByCategoryId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GloboTicket.Grpc.GetAllEventsResponse GetAllByCategoryId(global::GloboTicket.Grpc.GetAllEventsByCategoryIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllByCategoryId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GloboTicket.Grpc.GetAllEventsResponse> GetAllByCategoryIdAsync(global::GloboTicket.Grpc.GetAllEventsByCategoryIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllByCategoryIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GloboTicket.Grpc.GetAllEventsResponse> GetAllByCategoryIdAsync(global::GloboTicket.Grpc.GetAllEventsByCategoryIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllByCategoryId, null, options, request);
      }
      public virtual global::GloboTicket.Grpc.GetByEventIdResponse GetByEventId(global::GloboTicket.Grpc.GetByEventIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByEventId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GloboTicket.Grpc.GetByEventIdResponse GetByEventId(global::GloboTicket.Grpc.GetByEventIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByEventId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GloboTicket.Grpc.GetByEventIdResponse> GetByEventIdAsync(global::GloboTicket.Grpc.GetByEventIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByEventIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GloboTicket.Grpc.GetByEventIdResponse> GetByEventIdAsync(global::GloboTicket.Grpc.GetByEventIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByEventId, null, options, request);
      }
      public virtual global::GloboTicket.Grpc.GetAllCategoriesResponse GetAllCategories(global::GloboTicket.Grpc.GetAllCategoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllCategories(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GloboTicket.Grpc.GetAllCategoriesResponse GetAllCategories(global::GloboTicket.Grpc.GetAllCategoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllCategories, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GloboTicket.Grpc.GetAllCategoriesResponse> GetAllCategoriesAsync(global::GloboTicket.Grpc.GetAllCategoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllCategoriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GloboTicket.Grpc.GetAllCategoriesResponse> GetAllCategoriesAsync(global::GloboTicket.Grpc.GetAllCategoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllCategories, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override EventsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EventsClient(configuration);
      }
    }

  }
}
#endregion
